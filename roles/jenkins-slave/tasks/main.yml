---
 - name: Copy JAVA_HOME location to variable
   become: yes
   become_user: vagrant
   command:  bash -c -l "echo $JAVA_HOME"
   register: java_loc

 - name: Check for the Jenkins Slave Location for slave.jar file
   stat: path="{{jenkins_slave_location }}/slave.jar"
   register: check_jenkins_slave

 - debug: msg={{ check_jenkins_slave }}
 - debug: msg={{ check_jenkins_slave.stat.exists }}

 - name: Check the Size of the Jenkins Slave available
   set_fact:
      size_of_remote_jenkins_slave: "{{ check_jenkins_slave.stat.size }}"
   when: check_jenkins_slave.stat.exists == true

 - name: Calculate the Size of the Remote Machine Slave Jar
   shell: echo '{{ check_jenkins_slave.stat.size }}' | awk '{ foo = $1 / 1024  ; print foo "" }' | cut -d"." -f1
   register: slave_size_kb
   when: check_jenkins_slave.stat.exists == true

 - name: Get the Slave PID
   shell: "ps -aef | grep java | grep slave.jar | grep jnlp | grep -v grep | awk '{print $2}'"
   ignore_errors: yes
   register: slave_pid
   when: "{{ slave_size_kb.stdout }} < {{ jenkins_master_slave_size }}"
   when: check_jenkins_slave.stat.exists == true

 - name: Kill the Slave Pid
   shell: kill -9 {{ slave_pid.stdout }}
   ignore_errors: yes
   when: "{{ slave_size_kb.stdout }} < {{ jenkins_master_slave_size }}"

 - name: Remove the Remote Machine slave jar
   file:
      dest: "{{ jenkins_slave_location }}/slave.jar"
      state: "absent"
   when: check_jenkins_slave.stat.exists == true
   when: "{{ slave_size_kb.stdout }} < {{ jenkins_master_slave_size }}"

 - name: Download the New Slave Jar
   get_url: url={{ jenkins_master_download_slave }} dest={{ jenkins_slave_location }}
   register: jenkins_slave_download
   when: check_jenkins_slave.stat.exists == false
   when: "{{ slave_size_kb.stdout }} < {{ jenkins_master_slave_size }}"

 - name: Download the New Jenkins-Cli.jar
   get_url: url={{ jenkins_master_download_cli }} dest={{ jenkins_slave_location }}
   register: jenkins_slave_download
   when: "{{ slave_size_kb.stdout }} < {{ jenkins_master_slave_size }}"

 - name: Start the Jenkins Slave with Node Name {{ slavename }}
   shell: "nohup {{java_loc.stdout}}java -jar {{jenkins_slave_location }}/slave.jar -jnlpUrl {{ jenkins_master_url }} -jnlpCredentials {{ jenkins_jnlp_userName }}:{{ jenkins_jnlp_token }} &"
   register: output

 - debug: msg={{ output }}
